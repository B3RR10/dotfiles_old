[alias]
    # Find commits by source code
    fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

    # Find commits by commit message
    fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

    # List contributors with number of commits
    contributors = shortlog --summary --numbered
    ignore = "!gi() { curl -sL https://www.toptal.com/developers/gitignore/api/$@ ;}; gi"

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes

    # Treat spaces before tabs and all kinds of trailing whitespace as an error
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space

    pager = delta
    excludeFile = ~/.gitignore
{%@@ if profile == "work" @@%}

    fileMode = false
    autocrlf = input
{%@@ endif @@%}

[delta]
    features = line-numbers decorations
    syntax-theme = Dracula
    minus-style = red bold
    plus-style = green bold

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
    hunk-header-decoration-style = cyan box ul

[delta "line-numbers"]
    line-numbers-left-style = cyan
    line-numbers-right-style = cyan
    line-numbers-minus-style = red
    line-numbers-plus-style = green

[interactive]
    diffFilter = delta --color-only

[color]
    # Use colors in Git commands that are capable of colored output when
    # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
    ui = true

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow
    frag = magenta bold
    old = red bold
    new = green bold
    commit = yellow bold
    whitespace = red reverse

[color "status"]
    added = yellow
    changed = green
    untracked = cyan


[diff "bin"]
    # Use `hexdump` to diff binary files
    textconv = hexdump -v -C

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true
    tool = diffconflicts

[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22

[mergetool "diffconflicts"]
    cmd = nvim -c DiffConflicts \"$MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"
    trustExitCode = true

[mergetool]
    keepBackup = false

[user]
{%@@ if profile == "laptop" or profile == "desktop" @@%}
    signingkey = A9FDFA72
{%@@ endif @@%}
{%@@ if profile == "work" @@%}
    name = Berrio, Miguel
    email = miguel.berrio@dmi.de
{%@@ else @@%}
    name = Miguel Berrio
    email = mail@berrio.dev
{%@@ endif @@%}

[commit]
{%@@ if profile == "laptop" or profile == "desktop" @@%}
    gpgsign = true
{%@@ else @@%}
    gpgsign = false
{%@@ endif @@%}
    template = ~/.config/git/commit-message

[pull]
    rebase = true

[init]
    defaultBranch = main
