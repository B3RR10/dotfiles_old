#!/usr/bin/env sh

# Create a `package_list.txt` of the system with `pacman -Qqe > package_list.txt`

git=$(command -v git)
makepkg=$(command -v makepkg)
sudo=$(command -v sudo)
package_list=${PACKAGE_LIST:-"package_list.txt"}

echo "=== Package Installer ==="
if [ ! -f "$package_list" ]; then
    echo "Please use a correct package_list.txt"
    exit 1
fi
echo "Package List: $(realpath "$package_list")"
echo

# Get the passwd for sudo
$sudo -v

# Keep sudo alive through the hole script
while true; do $sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Check if yay is installed and if not, install it
if ! [ -x "$(command -v yay)" ]; then
    echo "Installing yay..."
    dir=$(pwd)
    cd "$(mktemp -d)" || exit
    $git clone https://aur.archlinux.org/yay-bin.git
    cd yay-bin || exit
    if ! $makepkg -si --noconfirm; then
        echo "Error installing yay" >&2
        exit 1
    fi
    cd "$dir" || exit
    echo "yay successfully installed"
fi

pacaur=$(command -v yay)
error_pkgs=""
echo "Installing packages..."
while IFS= read -r package; do
    if ! $pacaur -Qs "$package" > /dev/null; then
        if ! $pacaur -S --needed --noconfirm --quiet "$package"; then
            echo "Error installing package $package" >&2
            error_pkgs="${error_pkgs} $package"
        fi
    else
        echo "$package is already installed"
    fi
done < "$package_list"

if [ -n "$error_pkgs" ]; then
    echo
    echo "The following packages could not be installed in the system:"
    echo "${error_pkgs}"
    echo
fi

echo
echo "All packages were installed"
exit 0
# vim: ft=sh
