#!/usr/bin/env sh
# vim: ft=sh
TARGETDIR="/home/berriom"

function format_path()
{
    RET=$(echo $1 | sed -e 's/\//\\\//g')
    echo "$RET\/"
}

SCRIPTPATH="$( cd "$(dirname $0)" ; pwd -P )"
echo "Dotfiles located in $SCRIPTPATH"
SCRIPTPATH="/home/berriom/.dotfiles"

cd $SCRIPTPATH
ALL=( $( find . -not -path '*/\.*' -not -name README.md -not -name make -regex '.*' ) )
DIRS=()
FILES=()
for ITEM in ${ALL[@]} ; do
    # echo $ITEM
    if [[ -d $ITEM ]]; then
        DIRS+=( $ITEM )
        # echo "DIR: $ITEM"
    fi
    if [[ -f $ITEM ]]; then
        FILES+=( $ITEM )
        # echo "FILE: $ITEM"
    fi
done

echo
echo "Creating directories..."
echo

CAPS="\./[A-Z]"

for DIR in ${DIRS[@]} ; do

    # Remove parent directory
    [ $DIR = '.' ] && continue

    # Upper case directories are not hidden
    if [[ $DIR =~ $CAPS ]]; then
        mkdir -p $(echo $DIR | sed -e "s/^.\//$(format_path $TARGETDIR)/g")
        # echo $(echo $DIR | sed -e "s/^.\//$(format_path $TARGETDIR)/g")
    else
        mkdir -p $( echo $DIR | sed -e  "s/^.\//$(format_path $TARGETDIR)./g")
        # echo $( echo $DIR | sed -e  "s/^.\//$(format_path $TARGETDIR)./g")
    fi
done

echo "Done"
echo
echo "Creating symbolic links..."

for FILE in ${FILES[@]} ; do

    # Upper case directories are not hidden
    if [[ $FILE =~ $CAPS ]]; then
        # echo  "$(echo $FILE | sed -e "s/^.\//$(format_path $SCRIPTPATH)/g") -> $(echo $FILE | sed -e "s/^.\//$(format_path $TARGETDIR)/g")"
        ln -s $(echo $FILE | sed -e "s/^.\//$(format_path $SCRIPTPATH)/g") $(echo $FILE | sed -e "s/^.\//$(format_path $TARGETDIR)/g")
    else
        # echo  "$(echo $FILE | sed -e "s/^.\//$(format_path $SCRIPTPATH)/g") -> $(echo $FILE | sed -e "s/^.\//$(format_path $TARGETDIR)./g")"
        ln -s $(echo $FILE | sed -e "s/^.\//$(format_path $SCRIPTPATH)/g") $(echo $FILE | sed -e "s/^.\//$(format_path $TARGETDIR)./g")
    fi
done

echo "Done"


# DIRS=()
# while IFS= read -r -d $'\0'; do
#     DIRS+=("$REPLY")
# done < <(find . -type d -not -path '*/\.*' -print0)
# DIRS="$( find . -type d -not -path '*/\.*' )"
# IFS=' ' read -ra DIRS <<< "$( find . -type d -not -path '*/\.*' )"
# echo $DIRS
# DIRS=(`find . -type d -not -path '*/\.*'`)
# for DIR in "${DIRS[@]}" ; do
#     echo $DIR
#     echo
#     # echo "$DIR" | sed -e 's/^.\//.\/test\/./g'
#     # mkdir -p "$( echo "$DIR" | sed -e 's/^.\//.\/test\/./g' )"
#     # FILES="$( find $DIR -type f -not -path '*/\.*' -not -name README.md -not -name make )"
#     # echo $FILES
#     # for FILE in $FILES ; do
#     #     echo "$DIR -> $FILE"
#     # done
# done


# FILES="$( find . -type f -not -path '*/\.*' -not -name README.md -not -name make )"
# echo $FILES
# echo
# for file in $FILES ; do
#     echo $file | sed -e 's/^.\//./g'
# done
